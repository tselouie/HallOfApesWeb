{"version":3,"sources":["Carousel.js","Footer.js","App.js","index.js"],"names":["Carousel","useEffect","script","document","createElement","src","body","appendChild","removeChild","className","alt","href","style","textDecoration","color","url","marginRight","App","useState","currentAccount","setCurrentAccount","isClaiming","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","connectWallet","chainId","alert","mintNft","disabled","onClick","aria-label","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.edfe91fc.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport \"./Carousel.css\";\r\n\r\nconst Carousel = () => {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src=\"carouselScript.js\";\r\n        document.body.appendChild(script);\r\n      \r\n        return () => {\r\n          document.body.removeChild(script);\r\n        }\r\n      }, []);\r\n\r\n    return(\r\n    <div className=\"carousel\">\r\n    <button className=\"carousel__button carousel__button--left is-hidden\">\r\n      <img src=\"left-arrow.png\" alt=\"\" />\r\n    </button>\r\n    <div className=\"carousel__track-container\">\r\n      <ul className=\"carousel__track\">\r\n        <li className=\"carousel__slide current-slide\">\r\n          <img className=\"carousel__image \" src=\"./Boomer.png\" alt=\"\" />\r\n        </li>\r\n        <li className=\"carousel__slide\">\r\n          <img className=\"carousel__image\" src=\"./MrSunshine.png\" alt=\"\" />\r\n        </li>\r\n        <li className=\"carousel__slide\">\r\n          <img className=\"carousel__image\" src=\"./ThatDude.png\" alt=\"\" />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <button className=\"carousel__button carousel__button--right\">\r\n      <img src=\"./right-arrow.png\" alt=\"\" />\r\n    </button>\r\n    <div className=\"carousel__nav\">\r\n      <button className=\"carousel__indicator current-slide\"></button>\r\n      <button className=\"carousel__indicator\"></button>\r\n      <button className=\"carousel__indicator\"></button>\r\n    </div>\r\n  </div>)\r\n}\r\nexport default Carousel;","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nconst Carousel = () => {\r\n\r\n  // const styleOverride={height:25px,width:25px}\r\n    return(\r\n    <div className=\"footer\">\r\n      <div className=\"copyrightBlurb\">Â© 2022 Copyright: Bizzies Ape<br/>\r\n      <a href=\"google.com\" style={{textDecoration:'none',color:\"#3366BB\"}}>Contact Us</a>\r\n      </div>\r\n      <div className=\"socialContainer\">\r\n      <SocialIcon url=\"https://twitter.com/jaketrent\"  style={{marginRight:'5px'}} />\r\n      <SocialIcon url=\"https://discord.com\" style={{marginRight:'5px'}} />\r\n      <SocialIcon url=\"https://opensea.io/collection/bizzies-exclusive\"/>\r\n      </div>\r\n  </div>)\r\n}\r\nexport default Carousel;","import React, { useEffect, useState } from \"react\";\r\n// import { ethers } from \"ethers\";\r\n// import abi from \"./utils/HOA.json\";\r\nimport \"./App.css\";\r\nimport Carousel from \"./Carousel\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst App = () => {\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  //const [hasClaimedNFT, setHasClaimedNFT] = useState(false);\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  //UNCOMMENT WHEN deploying NFT Contract\r\n  // const contractAddress = \"0x14797D04C94558ab0DD0F76E52490eef2A4542B8\";\r\n  // const contractABI = abi.abi;\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      /*\r\n       * First make sure we have access to window.ethereum\r\n       */\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        console.log(\"Make sure you have metamask!\");\r\n      } else {\r\n        console.log(\"We have the ethereum object\", ethereum);\r\n      }\r\n\r\n      /*\r\n       * Check if we're authorized to access the user's wallet\r\n       */\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n      if (accounts.length !== 0) {\r\n        const account = accounts[0];\r\n        console.log(\"Found an authorized account:\", account);\r\n        setCurrentAccount(account);\r\n      } else {\r\n        console.log(\"No authorized account found\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      let chainId = await ethereum.request({ method: \"eth_chainId\" });\r\n      console.log(\"Connected to chain \" + chainId);\r\n\r\n      // String, hex code of the chainId of the Rinkebey test network\r\n      const rinkebyChainId = \"0x4\";\r\n      if (chainId !== rinkebyChainId) {\r\n        alert(\"You are not connected to the Rinkeby Test Network!\");\r\n      }\r\n\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // const functionCall = async () => {\r\n  //   try {\r\n  //     const { ethereum } = window;\r\n\r\n  //     if (ethereum) {\r\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\r\n  //       const signer = provider.getSigner();\r\n  //       const HOAContract = new ethers.Contract(\r\n  //         contractAddress,\r\n  //         contractABI,\r\n  //         signer\r\n  //       );\r\n\r\n  //       let count = await HOAContract.getTotalWaves();\r\n  //       console.log(\"Retrieved total wave count...\", count.toNumber());\r\n  //     } else {\r\n  //       console.log(\"Ethereum object doesn't exist!\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // Setup our listener.\r\n  // const setupEventListener = async () => {\r\n  //   // Most of this looks the same as our function askContractToMintNft\r\n  //   try {\r\n  //     const { ethereum } = window;\r\n\r\n  //     if (ethereum) {\r\n  //       // Same stuff again\r\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\r\n  //       const signer = provider.getSigner();\r\n  //       const connectedContract = new ethers.Contract(\r\n  //         contractAddress,\r\n  //         contractABI,\r\n  //         signer\r\n  //       );\r\n\r\n  //       // THIS IS THE MAGIC SAUCE.\r\n  //       // This will essentially \"capture\" our event when our contract throws it.\r\n  //       // If you're familiar with webhooks, it's very similar to that!\r\n  //       connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\r\n  //         console.log(from, tokenId.toNumber());\r\n  //         alert(\r\n  //           `Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${contractAddress}/${tokenId.toNumber()}`\r\n  //         );\r\n  //       });\r\n\r\n  //       console.log(\"Setup event listener!\");\r\n  //     } else {\r\n  //       console.log(\"Ethereum object doesn't exist!\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  const mintNft = async () => {\r\n    // try {\r\n    //   const { ethereum } = window;\r\n    //   if (ethereum) {\r\n    //     const provider = new ethers.providers.Web3Provider(ethereum);\r\n    //     const signer = provider.getSigner();\r\n    //     const connectedContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n    //     console.log(\"Going to pop wallet now to pay gas...\")\r\n    //     //mint NFT\r\n    //     // let nftTxn = await connectedContract.makeAnEpicNFT();\r\n    //     console.log(\"Mining...please wait.\")\r\n    //     setIsClaiming(true);\r\n    //     // await nftTxn.wait();\r\n    //     // console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\r\n    //     setIsClaiming(false);\r\n    //   } else {\r\n    //     console.log(\"Ethereum object doesn't exist!\");\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.log(error)\r\n    // }\r\n  };\r\n\r\n  /*\r\n   * This runs our function when the page loads.\r\n   */\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <section className=\"one\">\r\n        <div className=\"dataContainer\">\r\n          <span className=\"center\">\r\n            <img className=\"circle\" src=\"/android-chrome-192x192.png\" alt=\"logo\" />\r\n          </span>\r\n          <div className=\"header\">Hall Of Apes</div>\r\n          {!currentAccount ? (\r\n            <a className=\"connBtn\" onClick={connectWallet}>\r\n              Connect Wallet\r\n            </a>\r\n          ) : (\r\n            <div className=\"mint-nft\">\r\n              <h1>Mint your free Hall Of Apes Membership NFT</h1>\r\n              <a\r\n                className=\"connBtn\"\r\n                disabled={isClaiming}\r\n                onClick={() => mintNft()}\r\n              >\r\n                {isClaiming ? \"Minting...\" : \"Mint your APE\"}\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {currentAccount ? (<div><section className=\"two\">\r\n        <img className=\"roadMap\" src=\"./BizziesNFT_2022_Roadmap.png\" alt=\"roadmap\"></img>\r\n      </section>\r\n      <section className=\"three\" aria-label=\"Gallery\">\r\n        <div className=\"collectionTitle\">\r\n          <h1>Bizzies Collection</h1>\r\n        </div>\r\n        \r\n            <Carousel/>\r\n      </section> </div>) : null}\r\n  \r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}